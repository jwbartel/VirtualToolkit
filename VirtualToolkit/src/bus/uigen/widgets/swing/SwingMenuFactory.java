package bus.uigen.widgets.swing;import java.util.Hashtable;import javax.swing.JMenu;import bus.uigen.widgets.MenuFactory;import bus.uigen.widgets.VirtualMenu;public class SwingMenuFactory implements MenuFactory {	static int id;	public VirtualMenu createMenu(String text) {		/*		 * Container panel = new JPanel(); panel.setName("" + getNewID());		 * //panel.setBackground(Color.white); return panel; //return new		 * Panel(); //return new JPanel();		 */		return createSwingMenu(text);	}	/*	 * public VirtualMenu createMenu (Object icon) {	 * 	 * return createMenu((Icon) icon); }	 */	public VirtualMenu createMenu() {		/*		 * Container panel = new JPanel(); panel.setName("" + getNewID());		 * //panel.setBackground(Color.white); return panel; //return new		 * Panel(); //return new JPanel();		 */		return createSwingMenu();	}	static int getNewID() {		return id++;	}	public static SwingMenu createSwingMenu(String text) {		JMenu menuItem = new JMenu(text);		return virtualMenu(menuItem);		// return new Panel();		// return new JPanel();	}	/*	 * public static ASwingMenu createSwingMenu (Icon icon) { Menu menuItem =	 * new Menu(icon); return virtualMenu(menuItem); //return new Panel();	 * //return new JPanel(); }	 */	public static SwingMenu createSwingMenu() {		JMenu menuItem = new JMenu();		return virtualMenu(menuItem);		// return new Panel();		// return new JPanel();	}	static transient Hashtable<JMenu, SwingMenu> MenusToVirtualMenus = new Hashtable<JMenu, SwingMenu>();	public static SwingMenu virtualMenu(JMenu theMenu) {		if (theMenu == null)			return null;		SwingMenu vc = MenusToVirtualMenus.get(theMenu);		if (vc == null) {			vc = new SwingMenu(theMenu);			MenusToVirtualMenus.put(theMenu, vc);		}		return vc;	}}